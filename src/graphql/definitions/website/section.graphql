type Query {
  websiteSection(input: ModelIdInput!): WebsiteSection!
}

type WebsiteSection implements PlatformSection {
  # fields required by the PlatformSection GraphQL interface
  id: Int!
  name: String
  description: String
  fullName: String
  status: Int
  sequence: Int

  # fields directly on website.model::Section
  site(input: WebsiteSectionSiteInput = {}): WebsiteProductSite
  parent(input: WebsiteSectionParentInput = {}): WebsiteSection
  children(input: WebsiteSectionChildrenInput = {}): WebsiteSectionConnection!
  logo: PlatformAssetImage

  # fields from trait.platform::Content\SeoFields
  seoTitle: String
  alias: String
  redirects: [String]!
  slug: String
}

type WebsiteSectionConnection {
  totalCount: Int!
  edges: [WebsiteSectionEdge]!
  pageInfo: PageInfo!
}

type WebsiteSectionEdge {
  node: WebsiteSection!
  cursor: Cursor!
}

enum WebsiteSectionSortField {
  id
  name
  fullName
  sequence
}

input WebsiteSectionChildrenInput {
  status: ReferenceStatus = active
  sort: WebsiteSectionSortInput = {}
  pagination: PaginationInput = {}
}

input WebsiteSectionSiteInput {
  status: ReferenceStatus = active
}

input WebsiteSectionParentInput {
  status: ReferenceStatus = active
}

input WebsiteSectionSortInput {
  field: WebsiteSectionSortField = name
  order: SortOrder = asc
}
