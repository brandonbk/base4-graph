type Query {
  websiteProductSite(input: ModelStringIdInput!): WebsiteProductSite!
}

type WebsiteProductSite implements PlatformProduct {
  # fields required by the PlatformProduct GraphQL interface
  id: String! @value(localField: "_id")
  type: String!
  name: String
  fullName: String
  tagLine: String
  description: String
  logo: String
  status: Int

  # fields directly on website.model::Product\Site
  sections(input: WebsiteProductSiteSectionsInput = {}): WebsiteSectionConnection! @refMany(model: "website.Section", localField: "_id", foreignField: "site.$id")
  # pages: [WebsitePage] # add args? @todo Add this model
  options(input: WebsiteProductSiteOptionsInput = {}): WebsiteOptionConnection! @refMany(model: "website.Option", localField: "_id", foreignField: "site.$id")
  url: String
  socialFollow: [PlatformEntityStubSocial]! @arrayValue
  redirects: [String]! @arrayValue

  # fields that are new to GraphQL
  rootSections(input: WebsiteProductSiteSectionsInput = {}): WebsiteSectionConnection!
}

input WebsiteProductSiteSectionsInput {
  status: ReferenceStatus = active
  sort: WebsiteSectionSortInput = {}
  pagination: PaginationInput = {}
}

input WebsiteProductSiteOptionsInput {
  status: ReferenceStatus = active
  sort: WebsiteOptionSortInput = {}
  pagination: PaginationInput = {}
}
