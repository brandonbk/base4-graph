type Query {
  emailProductNewsletter(input: ModelStringIdInput!): EmailProductNewsletter!
}

type EmailProductNewsletter implements PlatformProduct {
  # fields required by the PlatformProduct GraphQL interface
  id: String!
  type: String!
  name: String
  fullName: String
  tagLine: String
  description: String
  logo: String
  status: Int

  # fields required by the EmailProductDeployment GraphQL interface
  provider: EmailProductStubProvider
  sourceProvider: EmailProductStubHtmlSourceProvider
  defaultTesters: [EmailCampaignTestRecipient]! # add args?
  defaultFromName: String
  defaultSubjectLine: String

  # fields directly on email.model::Product\Newsletter
  parent: EmailProductNewsletter
  sections: [EmailSection]! # add args?
  alias: String
  usesDeploymentDates: Boolean
  teaser: String
}

type EmailProductStubProvider {
  type: String
  providerId: String
  attributes: JSON
}

type EmailProductStubHtmlSourceProvider {
  handlerKey: String
  host: String
  path: String
}
