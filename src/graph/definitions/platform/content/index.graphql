# import * from 'article.graphql'

type Query {
  platformContent(input: ModelIdInput!): PlatformContent!
}

interface PlatformContent {
  id: Int!
  type: String!
  status: Int

  name: String
  shortName: String
  fullName: String # should be calculated in resolvers
  teaser: String
  body: String

  created: Date
  updated: Date
  published: Date
  unpublished: Date

  createdBy: PlatformSecurityUser
  updatedBy: PlatformSecurityUser

  taxonomy: [PlatformTaxonomy] # add args?
  relatedTo: [PlatformContent] # add args?

  primaryImage: PlatformAssetImage
  images: [PlatformAssetImage] # add args?

  # from mutations + model::Content
  websiteSchedules: [WebsiteSchedule] # add args? was mutations.Website.schedules
  primarySite: WebsiteProductSite
  primarySection: WebsiteSection

  # from mutations + trait::Content\SeoFields
  seoTitle: String
  alias: String
  redirects: [String]
  slug: String
}

type PlatformContentStubSidebar {
  body: String
}
